module control_unit(
  inst op,
  data_mem_wren,
  reg_file_wren,
  reg_file_dmux_select,
  reg_file_rmux_select,
  alu_mux_select,
  alu_control,
  alu_zero,
  pc_control);


  input [0:7] instruction;
  input alu_zero;
  
  output 
  
  
  wire [3:0]
  assign instruction = op [0:3]
  always @(op)
  begin
    if op = 0000
    
    
    else
    if op == 0001
    
    
    else 
    if op == 0010
    
    else 
    if op == 0011
    
    else 
    if op == 0100
    
    else 
    if op == 0101
    
    else
    if op == 0110
    
    else 
    if op == 0111
    
    else 
    if op == 1000
    
    else 
    if op == 1001
   
   else 
    if op == 1010
    
   else 
    if op == 1011
      alu control = 111;
      branch = 0;
      reg_dest = ;
      alu_src = 1;
      wren_reg = 1;
      wren_data = 0;
      datamem_toreg = 1;
   else 
    if op == 1100
      branch = 1;
      alu control = 111;
      branch = 0;
      reg_dest = ;
      alu_src = 1;
      wren_reg = 1;
      wren_data = 0;
      datamem_toreg = 1;
      
    
   else 
    if op == 1101
      alu control = 111;
      branch = 0;
      reg_dest = ;
      alu_src = 1;
      wren_reg = 1;
      wren_data = 0;
      datamem_toreg = 1;
   else 
    if op == 1110
      alu control = 111;
      branch = 0;
      reg_dest = ;
      alu_src = 1;
      wren_reg = 1;
      wren_data = 0;
      datamem_toreg = 1;
   
   else 
    if op == 1111   //load immediate
      alu control = 111;
      branch = 0;
      reg_dest = ;
      alu_src = 1;
      wren_reg = 1;
      wren_data = 0;
      datamem_toreg = 1;
      

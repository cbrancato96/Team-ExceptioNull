#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x82a690 .scope module, "test" "test" 2 112;
 .timescale 0 0;
v0x878b20_0 .var "control", 2 0;
v0x878bc0_0 .var "inputA", 7 0;
v0x878c70_0 .var "inputB", 7 0;
v0x878d20_0 .net "outputALU", 7 0, v0x8788f0_0; 1 drivers
v0x878e00_0 .net "overflow", 0 0, v0x8789a0_0; 1 drivers
v0x878eb0_0 .net "zero", 0 0, v0x878a40_0; 1 drivers
S_0x82a780 .scope module, "ALU" "alu" 2 120, 2 13, S_0x82a690;
 .timescale 0 0;
v0x82a870_0 .net "control", 2 0, v0x878b20_0; 1 drivers
v0x8787b0_0 .net "inputA", 7 0, v0x878bc0_0; 1 drivers
v0x878850_0 .net "inputB", 7 0, v0x878c70_0; 1 drivers
v0x8788f0_0 .var "outputALU", 7 0;
v0x8789a0_0 .var "overflow", 0 0;
v0x878a40_0 .var "zero", 0 0;
E_0x850270 .event edge, v0x82a870_0;
    .scope S_0x82a780;
T_0 ;
    %wait E_0x850270;
    %load/v 8, v0x82a870_0, 3;
    %cmpi/u 8, 0, 3;
    %jmp/1 T_0.0, 6;
    %cmpi/u 8, 1, 3;
    %jmp/1 T_0.1, 6;
    %cmpi/u 8, 2, 3;
    %jmp/1 T_0.2, 6;
    %cmpi/u 8, 3, 3;
    %jmp/1 T_0.3, 6;
    %cmpi/u 8, 4, 3;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 6, 3;
    %jmp/1 T_0.5, 6;
    %cmpi/u 8, 7, 3;
    %jmp/1 T_0.6, 6;
    %set/v v0x878a40_0, 0, 1;
    %set/v v0x8789a0_0, 0, 1;
    %jmp T_0.8;
T_0.0 ;
    %load/v 8, v0x8787b0_0, 8;
    %set/v v0x8788f0_0, 8, 8;
    %set/v v0x8789a0_0, 0, 1;
    %load/v 8, v0x8788f0_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %jmp/0  T_0.9, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.11, 8;
T_0.9 ; End of true expr.
    %jmp/0  T_0.10, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.11;
T_0.10 ;
    %mov 9, 0, 1; Return false value
T_0.11 ;
    %set/v v0x878a40_0, 9, 1;
    %jmp T_0.8;
T_0.1 ;
    %load/v 8, v0x8787b0_0, 8;
    %load/v 16, v0x878850_0, 8;
    %add 8, 16, 8;
    %set/v v0x8788f0_0, 8, 8;
    %load/v 8, v0x8787b0_0, 8;
    %mov 16, 0, 1;
    %cmp/u 0, 8, 9;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x878850_0, 8;
    %mov 17, 0, 1;
    %cmp/u 0, 9, 9;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x8788f0_0, 8;
    %mov 17, 0, 1;
   %cmpi/u 9, 0, 9;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x8787b0_0, 8;
    %mov 17, 0, 1;
   %cmpi/u 9, 0, 9;
    %mov 9, 5, 1;
    %load/v 10, v0x878850_0, 8;
    %mov 18, 0, 1;
   %cmpi/u 10, 0, 9;
    %mov 10, 5, 1;
    %and 9, 10, 1;
    %load/v 10, v0x8788f0_0, 8;
    %mov 18, 0, 1;
    %cmp/u 0, 10, 9;
    %or 5, 4, 1;
    %mov 10, 5, 1;
    %and 9, 10, 1;
    %or 8, 9, 1;
    %jmp/0xz  T_0.12, 8;
    %set/v v0x8789a0_0, 1, 1;
    %jmp T_0.13;
T_0.12 ;
    %set/v v0x8789a0_0, 0, 1;
T_0.13 ;
    %load/v 8, v0x8788f0_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %jmp/0  T_0.14, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.16, 8;
T_0.14 ; End of true expr.
    %jmp/0  T_0.15, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.16;
T_0.15 ;
    %mov 9, 0, 1; Return false value
T_0.16 ;
    %set/v v0x878a40_0, 9, 1;
    %jmp T_0.8;
T_0.2 ;
    %load/v 8, v0x8787b0_0, 8;
    %load/v 16, v0x878850_0, 8;
    %and 8, 16, 8;
    %set/v v0x8788f0_0, 8, 8;
    %set/v v0x8789a0_0, 0, 1;
    %load/v 8, v0x8788f0_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %jmp/0  T_0.17, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.19, 8;
T_0.17 ; End of true expr.
    %jmp/0  T_0.18, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.19;
T_0.18 ;
    %mov 9, 0, 1; Return false value
T_0.19 ;
    %set/v v0x878a40_0, 9, 1;
    %jmp T_0.8;
T_0.3 ;
    %load/v 8, v0x8787b0_0, 8;
    %inv 8, 8;
    %set/v v0x8788f0_0, 8, 8;
    %set/v v0x8789a0_0, 0, 1;
    %load/v 8, v0x8788f0_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %jmp/0  T_0.20, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.22, 8;
T_0.20 ; End of true expr.
    %jmp/0  T_0.21, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.22;
T_0.21 ;
    %mov 9, 0, 1; Return false value
T_0.22 ;
    %set/v v0x878a40_0, 9, 1;
    %jmp T_0.8;
T_0.4 ;
    %load/v 8, v0x8787b0_0, 8;
    %load/v 16, v0x878850_0, 8;
    %or 8, 16, 8;
    %inv 8, 8;
    %set/v v0x8788f0_0, 8, 8;
    %set/v v0x8789a0_0, 0, 1;
    %load/v 8, v0x8788f0_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %jmp/0  T_0.23, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.25, 8;
T_0.23 ; End of true expr.
    %jmp/0  T_0.24, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.25;
T_0.24 ;
    %mov 9, 0, 1; Return false value
T_0.25 ;
    %set/v v0x878a40_0, 9, 1;
    %jmp T_0.8;
T_0.5 ;
    %load/v 8, v0x8787b0_0, 8;
    %ix/load 0, 1, 0;
    %mov 4, 0, 1;
    %shiftl/i0  8, 8;
    %set/v v0x8788f0_0, 8, 8;
    %set/v v0x8789a0_0, 0, 1;
    %load/v 8, v0x8788f0_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %jmp/0  T_0.26, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.28, 8;
T_0.26 ; End of true expr.
    %jmp/0  T_0.27, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.28;
T_0.27 ;
    %mov 9, 0, 1; Return false value
T_0.28 ;
    %set/v v0x878a40_0, 9, 1;
    %jmp T_0.8;
T_0.6 ;
    %load/v 8, v0x8787b0_0, 8;
    %ix/load 0, 1, 0;
    %mov 4, 0, 1;
    %shiftr/i0  8, 8;
    %set/v v0x8788f0_0, 8, 8;
    %set/v v0x8789a0_0, 0, 1;
    %load/v 8, v0x8788f0_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %jmp/0  T_0.29, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.31, 8;
T_0.29 ; End of true expr.
    %jmp/0  T_0.30, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.31;
T_0.30 ;
    %mov 9, 0, 1; Return false value
T_0.31 ;
    %set/v v0x878a40_0, 9, 1;
    %jmp T_0.8;
T_0.8 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x82a690;
T_1 ;
    %vpi_call 2 129 "$display", "control=%b, inputA=%b, inputB=%b, outputALU=%b, overflow=%b, zero=%b", v0x878b20_0, v0x878bc0_0, v0x878c70_0, v0x878d20_0, v0x878e00_0, v0x878eb0_0;
    %set/v v0x878b20_0, 0, 3;
    %movi 8, 1, 8;
    %set/v v0x878bc0_0, 8, 8;
    %set/v v0x878c70_0, 1, 8;
    %vpi_call 2 133 "$monitor", "control=%b, inputA=%b, inputB=%b, outputALU=%b, overflow=%b, zero=%b", v0x878b20_0, v0x878bc0_0, v0x878c70_0, v0x878d20_0, v0x878e00_0, v0x878eb0_0;
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "alu.v";
